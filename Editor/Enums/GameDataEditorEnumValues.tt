<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Collections.Generic" #>
namespace Assets.Scripts.Craiel.GameData.Editor.Enums
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public static class GameDataEditorEnumValues
    {
        // -------------------------------------------------------------------
        // Auto Generated by AudioEnumValues.tt DO NOT MODIFY DIRECTLY!
        // -------------------------------------------------------------------
<#
IList<string> excludes = new List<string>() { "GameDataEditorEnumValues" };
var provider = (IServiceProvider)this.Host;
var dteObject = (DTE)provider.GetService(typeof(DTE));

var CurrentProject = dteObject.Solution.FindProjectItem(Host.TemplateFile).ContainingProject;

var ProjectPath = System.IO.Path.GetDirectoryName(CurrentProject.FullName) + System.IO.Path.DirectorySeparatorChar;
string[] files = System.IO.Directory.GetFiles(System.IO.Path.GetDirectoryName(Host.TemplateFile), "*.cs");
foreach(string file in files)
{
    string name = System.IO.Path.GetFileNameWithoutExtension(file);
    if(excludes.Contains(name))
    {
        continue;
    }

    WriteLine(string.Format("        public static readonly IList<{0}> {0}Values = Enum.GetValues(typeof({0})).Cast<{0}>().ToList();\r\n", name));
}
#>
    }
}
